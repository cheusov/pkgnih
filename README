TODO: Add samples of use

--------------------------------------------------------------------------
NIH is a planned package management tool for pkgsrc.
NIH means Not Invented Here, yes, I'm talking about NIH syndrome :-)

Why not:

  pkg_add/pkg_delete:
    - No comments.

  pkgchk:
    - It is extremely slow and lacks useful features.

  pkgin:
    - It is written in C, the worst programming language I've ever
      known for this sort of task. All other reasons are secondary.
    - I think sqlite database is absoletely useless.

Why NIH:

  - I've got pkg_summary-utils, a big collection of powerful scripts
    for managing pkg_summary files. I've been developing it for almost
    three years and I think now it is ready to be a foundation for
    NIH.

  - I've got distbb, very powerful and flexible bulk build tool.  For
    several years I've been using it for running bulk builds under
    Linux and NetBSD, and consider it rather stable.

  - I've got pkg_status, small tool for comparing versions of
    installed packages against pkg_summary.txt or pkgsrc source tree.
    It also provides lots of other things usually implemented by
    full-featured package management tools. It is very small and
    stable.

  - I've got pkg_online-client and pkg_grep_summary, very powerful and
    fast tools for searching for packages. They are also small and stable.

Plans:
  - To provide features implemented in pkgchk, pkgin, pkg_comp,
    pkg_leaves, pkgfind, pkg_status, pkg_online-client and
    pkg_rolling-replace.
  - Support for both binary and sources-based upgrade
  - Less than 4000 lines of code
  - No sqlite or other databases.
  - Support for PKG_OPTIONS and multivariant packages (Python, Apache, PHP)
  - No dependencies other than
      a) pkg_summary-utils, runawk and pipestatus for basic functionality
      b) paexec and libmaa for running things in parallel
         using all available CPUs
      c) distbb (plus paexec and libmaa) for building packages from sources
      d) dict-client (plus libmaa) and netcat for searching
         via pkg_online server
  - Shell, AWK, RunAWK, UNIX tools and nothing else.
  - No libnih.a

Planned features:

  - Configuration files are under ~/.nih/ or $prefix/etc/nih/ directories.

  - nih help
    nih -h
     Display help message

  - nih <command> -h
     Display help message for <command>

  - nih refresh
     Download pkg_summary.bz2 and save it to ~/.nih/,
     then unpack it to pkg_summary.txt.

    ~/.nih/config:
        PKG_SUMMARY_URL - URL or file name for pkg_summary.bz2/pkg_summary.txt
        FETCH_CMD - command for fetching pkg_summary.bz2

  - nih install [options] <package1> [package2...]
    nih upgrade [options] [packages...]
     Install or upgrade the specified packages
      -n     output shell program to execute without running it
      -r     mark installed packages "for testing purposes only",
             such packages can be listed and removed in the future.
      -s     build packages with a help of distbb and then install them.
      -d     only download (binaries or sources), neither install packages
             nor build packages from sources
      -y     answer "Yes" to all questions
     By default all packages are upgraded by 'nih upgrade'.
    ~/.nih/config:
        LAZY_UPGRADE - upgrade the [automatically installed] dependencies
              only if new versions are really necessary.

  - nih uninstall|delete|remove <packages...>
     Remove specified packages, dependent packages and automatically installed
     leaf packages.
      -n     output shell program to execute without running it
      -y     answer "Yes" to all questions

  - nih verify [options...]
     Verify installed packages integrity.
       -m   check checksums of installed files (pkg_admin check)
       -U   check for REQUIRES/PROVIDES coherence
       -L   check for existence of library files listed in REQUIRES
       -d   check for presence of dependencies
       -D   check for presence of dependencies and their versions

  - nih status [options] [packages]
     Compare installed packages with pkg_summary.txt (default), pkgsrc
     tree or pkg_online server.
       -b     compare installed packages against pkg_summary.txt
       -s     compare installed packages against pkgsrc tree
       -o     compare installed packages against pkg_online server content
       -r     raw output (pkg_summary format)
       -u     analyse packages marked as installed by user (the default, see -a)
       -a     analyse all packages (see -u)
       -Q     No noisy reminder about output format

  - nih audit [options]
     download-vulnerability-list + pkg_admin audit

  - nih search -f
     Output fields to search in.

    nih search -s
     Output search strategies.

    nih search [-1..9] [-r] [-q] query1 [query2 ...]

     Search for packages where 'queryX' is either plain text query or
     in 'f:s:q' format, 'f' here means field name, 's' - search
     strategy and 'q' means plain text query

       -1       one-line output
       -2..9    output found packages in pkg_summary format
       -r       raw output (pkg_summary format)
       -q       quiet mode, do not print "No matches found" to stderr
       ~/.nih/config
           FIELDS_<N> - list of fields to output

  - nih leaf [options]
       Output or remove automatically installed leaf packages.
       -l    output leaf packages installed automatically (default)
       -t    output only PKGNAME
       -R    remove automatically installed leaf packages
       -E    the same as -R but with 'pkg_delete -A'
       -n    pass -n to pkg_delete
  - nih license [options]
       Output licenses of installed packages with their packages.
       Licenses marked as accepted are skipped.
       -i interactively remove packages with unacceptable licenses or
          accept licences
  - nih list [options]
       Output installed packages.
       -1      output only PKGNAME and COMMENT
       -2..9   output packages in pkg_summary format
       ~/.nih/config
           FIELDS_<N> - list of fields to output
