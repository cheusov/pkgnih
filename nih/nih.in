#!/bin/sh

set -e 

export LC_ALL=C

usage (){
    cat 1>&2 <<'EOF'
blablabla help, see README
EOF
}

sysconfdir=${NIH_SYSCONFDIR-@sysconfdir@}/nih
libexecdir=${NIH_LIBEXECDIR-@libexecdir@}
confdir=$HOME/.nih

# loading config files
if test -r "$sysconfdir/config"; then
    conffile="$sysconfdir/config"
elif test -r "$confdir/config"; then
    conffile="$confdir/config"
else
    cat <<EOF
Neither $sysconfdir/config not $confdir/config are readable.
Sorry, I cannot help.
EOF
    exit 1
fi

. "$conffile"

# handling global options
if test "_$1" = _-h; then
    usage
    exit 0
elif test "_$1" = _-V; then
    echo pkgnih @VERSION@
    exit 0
fi

if test $# -eq 0; then
    usage
    exit 1
fi

# handling commands

######################################################################
# help
if test "$1" = help; then
    usage
    exit 0
fi

######################################################################
# refresh
usage_refresh (){
    cat <<'EOF'
nih refresh [options]
     Download pkg_summary.bz2 and SHA512.bz2, save them to ~/.nih/, and
     then unpack them to .txt files.

   options:
      -h    display this help message

~/.nih/config:
   PKG_SUMMARY_URL - URL or file name for pkg_summary.bz2/pkg_summary.txt
   PKG_SUMMARY     - path to pkg_summary.txt, set this variable if you use
                   local pkg_summary, otherwise keep it unset
   fetch function  - download command
EOF
}

if test "$1" = refresh; then
    if test -n "$PKG_SUMMARY"; then
	cat 1>&2 <<EOF
Variable PKG_SUMMARY is set in configuration file.
Nothing to do.
EOF
	exit 1
    fi

    shift
    while getopts h f; do
	case "$f" in
	    '?')
		echo "Unknown suboption $f for command 'refresh'"
		exit 1;;
	    h)
		usage_refresh
		exit 0;;
	esac
    done
    shift `expr $OPTIND - 1`

    cd "$confdir"

    fetch=""
    echo 'Downloading pkg_summary.bz2...'
    fetch "$PKG_SUMMARY_URL/All/pkg_summary.bz2"
    echo done

    echo 'Downloading SHA512.bz2...'
    fetch "$PKG_SUMMARY_URL/SHA512.bz2"
    echo done

    bzip2 -dc pkg_summary.bz2 > pkg_summary.txt.tmp
    mv pkg_summary.txt.tmp pkg_summary.txt

    bzip2 -dc SHA512.bz2 > SHA512.txt.tmp
    mv SHA512.txt.tmp SHA512.txt

    exit 0
fi

######################################################################
# ensure that pkg_summary.txt exists
if test -z "$PKG_SUMMARY"; then
    PKG_SUMMARY=$confdir/pkg_summary.txt
fi

if ! test -r "$PKG_SUMMARY"; then
    cat 1>&2 <<EOF
'$PKG_SUMMARY' file doesn't exist or is not readable.
Perhaps you need to run 'nih refresh'
EOF
    exit 1
fi

######################################################################
# install | upgrade
if test "_$1" = _install -o "_$1" = _upgrade; then
    exit 0
fi

######################################################################
# uninstall | remove | delete
if test "_$1" = _uninstall -o "_$1" = _remove -o "_$1" = _delete; then
    exit 0
fi

######################################################################
# verify
if test "$1" = verify; then
    exit 0
fi

######################################################################
# status
usage_status (){
    cat <<'EOF'
nih status [options] [PKGBASEs]
      Compare installed packages with pkg_summary.txt (default) or
      pkgsrc tree.

   options:
      -h     display this help message
      -b     compare installed packages against pkg_summary.txt (default)
      -s     compare installed packages against pkgsrc tree
      -r     raw output (pkg_summary format)
      -u     analyse packages marked as installed by user (the default, see -a)
      -a     analyse all packages (see -u)
      -q     No noisy reminder about output format
EOF
}

if test "$1" = status; then
    shift
    opts='b'
    while getopts hbsruaQ f; do
	case "$f" in
	    '?')
		echo "Unknown suboption $f for command 'status'"
		exit 1;;
	    h)
		usage_status
		exit 0;;
	    *)
		opts="${opts}$f";;
	esac
    done
    shift `expr $OPTIND - 1`

    export PKG_SUMMARY
    pkg_status "-$opts" "$@"

    exit 0
fi

######################################################################
# audit
if test "$1" = audit; then
    exit 0
fi

######################################################################
# search
if test "$1" = search; then
    exit 0
fi

######################################################################
# leaf
usage_leaf (){
    cat <<'EOF'
nih leaf [options]
      Output or remove automatically installed leaf packages,
      by default list of packages is output.

   option:
      -h    display this help message
      -t    output only PKGNAME
      -R    remove automatically installed leaf packages
      -E    the same as -R but with 'pkg_delete -A'
      -n    pass -n to pkg_delete
EOF
}

if test "$1" = leaf; then
    shift
    opts='l'
    while getopts htREn f; do
	case "$f" in
	    '?')
		echo "Unknown suboption $f for command 'leaf'"
		exit 1;;
	    h)
		usage_leaf
		exit 0;;
	    *)
		opts="${opts}$f";;
	esac
    done
    shift `expr $OPTIND - 1`

    pkg_status "-$opts" "$@"

    exit 0
fi

######################################################################
# list
if test "$1" = list; then
    exit 0
fi

######################################################################
# license
if test "$1" = license; then
    exit 0
fi

######################################################################
# <bad> command
echo "Unknown command '$1', see nih -h for more information" 1>&2
exit 2
