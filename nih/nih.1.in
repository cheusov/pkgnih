.\"     $NetBSD$
.\"
.\" Copyright (c) 2010-2014 by Aleksey Cheusov (vle@gmx.net)
.\" This man page may contain portions of pkgin.1 by Emile Heitor.
.\" Absolutely no warranty.
.\"
.\" ------------------------------------------------------------------
.de VB \" Verbatim Begin
.ft CW
.nf
.ne \\$1
..
.de VE \" Verbatim End
.ft R
.fi
..
.\" ------------------------------------------------------------------
.TH NIH 1 "Nov 24, 2014" "" ""
.SH NAME
nih \- package manager for pkgsrc
.SH SYNOPSIS
.BI nih " [options] " <command> " [command options] [--] [args...]" 
.br
.BI "nih <command>" " -h"
.SH DESCRIPTION
The
.B nih
is a command-line tool for managing pkgsrc packages. It relies on pkg_summary(5)
for installation, removal and update of packages and associated
dependencies using remote or local repository.
.SH OPTIONS
.TP
.B "-h"
Display help message.
.TP
.B "-V"
Display nih version.
.TP
.B "-y"
Answer 'Yes' to all questions.
.TP
.BI "-s" " summary_file"
Specify the path to pkg_summary(5) file for use instead of downloaded one
or specified in a config file. Plain text, gzip-ed of bzip2-ed files
are supported.
.SH COMMANDS
The following commands are provided.
.TP
.B  help
Display help message
.TP
.B  refresh
By default pkg_summary(5) and SHA512 files are downloaded from
the remote repository, and
unpacked to ~/.nih/. The URL of the parent directory under which
these files are located is specified by the REPOSITORY configuration variable.
Unless
.I NO_SUMMARY_COPY
variable is set in the configuration file, the previous version of the files
pkg_summary.txt and SHA512.txt is backed up into "pkg_summary_YYYYMMDD_hhmm.txt" and
"SHA512_YYYYMMDD_hhmm.txt" respectively. So, they can be restored and used again
at any point in the future.
If
.I IGNORE_CKSUMS
variable is set to a non-empty string, SHA512.txt file is not downloaded and cksums
of binary packages are not checked.
.P
.RS
.B "nih refresh"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -b
Download pkg_summary(5) and SHA512. This is the default.
.TP
.B -p
Incrementally update pkg_src_summary.txt file from pkgsrc tree.
Take a note that the first run may take several hours even on modern
computers. Further runs will be significantly faster provided that
pkgsrc files under mk/ directories were not changed.
.I PKGSRCDIR
configuration variable points to pkgsrc tree.
.I PSS_OPTIONS
configuration variable contains options passed to
.B pkg_src_summary(1)
.RB ( -m
by default).
.I PKGSRC_ADDSUBDIRS
configuration variable contains a list of additional
subdirectories for pkgsrc packages, for example,
.IR wip .
.TP
.B -i
Update pkg_inst_summary.txt file consisting of summaries for installed packages.
.TP
.B -P
The same as
.B -p
but pkg_src_summary.txt file
is regenerated from scratch, that is, pkgsrc tree is fully rescanned.
.RE
.TP
.B  info
Show information about packages available in the binary repository or about installed packages.
.P
.RS
.B "nih info"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -b
Query the binary repository. This is the default.
.TP
.B -p
Search in pkg_src_summary.txt file built from pkgsrc tree
by
.BR "nih refresh -p" .
.TP
.B -o
Query pkg_online database.
.TP
.B -i
Display information about installed packages.
.TP
.B -1|-3|-9|-l
The same as in
.BR "nih search" .
The default is
.BR -3 .
.TP
.B -r
Output raw package summaries.
.TP
.B -q
Quiet mode, do not print "No matches found" to stderr
.RE
.P
.RS
Examples:
.VB
   # output the packages summary from binary repository
   nih info glib2 runawk emacs

   # output raw summaries of installed packages
   nih info -ir glib2 runawk

   # output raw summaries from pkg_online database
   nih info -orq glib2 runawk
.VE
.RE
.TP
.B meta
Show information about meta packages available in the binary repository
or installed meta packages.
.P
.RS
.B "nih meta"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -b
Query the binary repository. This is the default.
.TP
.B -p
Search in pkg_src_summary.txt file built from pkgsrc tree
by
.BR "nih refresh -p" .
.TP
.B -o
Query pkg_online database.
.TP
.B -i
Display information about installed meta packages.
.TP
.B -1|-3|-9
The same as in
.B "nih search"
but works only with
.BR -r .
The default is
.BR -1 .
.TP
.B -r
Output raw package summaries.
.TP
.B -q
Quiet mode, do not print "No matches found" to stderr
.RE
.P
.RS
Examples:
.VB
   # output meta packages available in binary repository
   nih meta

   # output installed meta packages
   nih meta -i

   # output raw summaries for meta packages from pkg_online database
   nih meta -or
.VE
.P
The output format can be changed with a help of the shell
function 'summary2meta_packages' defined in the configuration file.
See @dfltconfdir@/nih.default.conf for details.
The default format may change in future releases.
.RE
.TP
.B  search
Search for packages in pkg_summary(5), online database or in installed packages.
For details see pkg_digger(1).
.P
.RS
.B "nih search"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -b
Search in the binary repository. This is the default.
.TP
.B -p
Search in pkg_src_summary.txt file built from pkgsrc tree
by
.BR "nih refresh -p" .
.TP
.B -o
Search in pkg_online database.
For this to work you need pkgtools/pkg_online-client package.
.TP
.B -i
Search in installed packages.
.TP
.B -s
Output avalable search strategies.
.TP
.B -f
Output available search fields. Field names (e.g. PKGNAME, COMMENT, etc)
can be used to focus 'nih search' invocations on a specific field
of package description. See examples below.
.TP
.B -1
Display one-line information about the packages (default).
.TP
.B -3
Display short information about the packages.
.TP
.B -9
Display full information about the packages.
.TP
.B -l
Display PKGNAME, PKGPATH and file list.
.TP
.B -r
Raw output in pkg_summary(5) format. This option requires either
.BR -3 " or " -9 " option.
.TP
.B -q
Quiet mode, do not print "No matches found" to stderr.
.RE
.P
.RS
Examples:
.VB
   # output available search strategies
   # for searching in binary repository
   nih search -s

   # output available search fields
   # for searching in binary repository
   nih search -f

   # search for packages that depends on libmaa
   nih search DEPENDS:substring:libmaa

   # search for packages which name starts with "dict"
   nih search PKGNAME:prefix:dict

   # search for packages with subword "dns" in COMMENT
   # and category "net"
   nih search COMMENT:word:dns PKGPATH:prefix:net

   # keyword search for packages which have words
   # "dns" and "server" in COMMENT
   nih search c:kw:'dns server'

   # search for packages that have PKGNAME beginning with "lua"
   nih search n:p:lua

   # search for huge binary packages
   nih search FILE_SIZE:awk:'fvalue+0 > 100000000'

   # search for packages with PKGBASE=emacs
   nih search ::emacs

   # search for auto-installed packages, summaries have short format
   nih search -i3 automatic::yes

   # search for packages with PKGPATH=lang/mawk, summaries have long format
   nih search -9 lang/mawk

   # output available search strategies
   # for searching in pkg_online database
   nih search -os

   # output available search fields
   # for searching in pkg_online database
   nih search -of

   # search for oberon in pkg_online database
   nih search -o oberon

   # search for dns servers in pkg_online database
   nih search -o dns server

   # search for dictionaries excluding CJK and spell dicts
   nih search -o3 dictionary -spell -japanese -chinese -korean

   # search for spreadsheets in pkg_online database,
   # summaries have long format
   nih search -o -q9r spreadsheet
.VE
.P
The output format can be changed with a help of the shell
function 'summary2filelist' defined in the configuration file.
See @dfltconfdir@/nih.default.conf for details.
The default format may change in future releases.
.RE
.TP
.BR  install " and " update
Install, uninstall or update specified packages.
If no packages are specified
full update is done. Packages with "keep" flag (see "nih mark -k" and
"nih list -k" for details) are not updated.
Packages may be specified as
PKGBASE, PKGNAME, PKGPATH or a filename, optionally with one of the following suffixes:
 "-" (tells to uninstall the package),
 "--" (tells to uninstall the package with all dependent packages),
 "+" (tells to install/update the package and mark it as auto-installed), or
 "_" (tells to install/update the package without altering auto-installed flag).
 "/" (tells not to update nor uninstall the package if it is possible).
When installing, packages without a suffix are marked as installed by user.
Automatically installed leaf packages are removed automatically.
If "_" is specified as a package, all packages
for which update is available will be updated.
.B nih
tries to resolve conflicts and satisfy dependencies automatically.
If it fails, conflict resolution should be done manually.

By default PKGPATH of installed
packages remains unchanged. This has an effect that if, for example, emacs-21 was installed
from editors/emacs21, running the command
.VB

   nih install emacs

.VE
will not update it to emacs-23 from editors/emacs23.
To get the package updated, run the following:
.VB

   nih install emacs- editors/emacs23

.VE

Before an installation starts, a list of installed packages
is saved to the history file ~/.nih/installed_YYYYMMDD_hhmm.bz2 unless
.I NO_INSTALLED_COPY
variable is set in the config file. The same applies to
.IR uninstall " and " leaf
commands.

Once the binaries have been downloaded, the packages to be installed
are checked for common files in order to prevent file name clashes and
the consequent
failures in the middle of the process. This is in addition to analysing
the CONFLICTS variable set for this purpose.
Setting
.I NO_PLIST_CHECK
variable to a non-empty string disables
the additional checking procedure,
the CONFLICTS variable is still examined.
.P
.RS
.B "nih install" 
or 
.B "nih update"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -n
Do not actually alter installed packages, just report the steps that
would be taken if it were.
.TP
.B -d
Do not update installed packages, download binaries only.
.TP
.B -k
Continue downloading packages despite errors that may occur underway.
.TP
.B -l
Do not remove auto-installed leaf packages.
Bear in mind that
this may cause problems in creating a non-conflicting update plan.
The default is to remove such packages unless
.I NO_REMOVE_LEAVES
configuration variable is set to
.IR yes " or " 1 .
.TP
.B -L
Remove auto-installed leaf packages. See
.B -l
for more information.
.TP
.B -p
Disable REQUIRES/PROVIDES consistency checks.
Bear in mind that
this may cause problems in creating a non-conflicting update plan.
By default this check is enabled unless
.I NO_REQPROV_CHECK
configuration variable is set to
.IR yes " or " 1 .
.TP
.B -P
Enable REQUIRES/PROVIDES consistency checks. See
.B -p
for more information.
.TP
.B -v
Disable pkgdb validation before installation.
.TP
.B -V
Enable pkgdb validation before installation. This is the default.
.TP
.B -B
Consider packages different if their BUILD_DATE differ.
.TP
.B -r
Update specified packages and all their dependencies.
.TP
.B -R
Update specified packages and all dependent packages.
.TP
.BI -a " val"
Set
.I PKG_PATH
and run
.B pkg_add(8)
directly.
In this scenario, the update plan is not generated, packages are not
checked for PLIST conflicts, suffixes '+', '-', '--', '_' etc. are
not supported, packages installed as a dependency are not removed,
downloaded binaries are not saved in
.IR $CACHEDIR ...
If
.I val
is 1, PKG_PATH is set to
.IR $CACHEDIR/All ,
if it is 2, PKG_PATH is set to
.IR $REPOSITORY/All .
Use this option with caution.
.TP
.B -t
Install packages and mark them as "try out". Other commands of nih
implement an option (typically, -t) to address packages that hold this flag.
For example, such packages may be listed using
.I nih list -t
or uninstalled with a help of
.IR "nih remove -t" .
Similarly, to manually mark/unmark packages as "try out" the commands
.IR "nih mark -t/-T"
can be used respectively.
.br
.B NOTE:
"try out" marker is set with a help of
.br
.I pkg_admin set try_out=yes <packages>.
.TP
.B -D
Enable debugging output.
.RE
.P
.RS
Examples:
.VB
   # update all packages
   nih update

   # update all packages and conside packages different
   # if their BUILD_DATE differ
   nih update

   # download binary packages, but do not install them
   nih -y update -dk openoffice2 firefox midori

   # install lang/gawk and uninstall mawk
   nih install mawk- lang/gawk

   # try to guess ;-)
   nih install perl-5.12.2nb2

   # replace libao-oss with libao-alsa
   nih install libao-alsa libao-oss-

   # replace emacs (21,22,23,...) with emacs-20
   nih install emacs- editors/emacs20

   # install GConf and xproto and mark them as auto-installed
   nih install GConf+ xproto+

   # uninstall four packages
   nih install gmake- autoconf- automake- libtool-base-

   # replace wip/dict-client with textproc/dict-client
   nih install textproc/dict-client wip/dict-client-

   # install a binary package from file and mark it auto-installed
   nih install /usr/pkgsrc/packages/xyz-1.2.3.tgz+

   # install window managers for testing/playing
   nih install -t xfce4 fvwm openbox ctwm wmii fluxbox sawfish

   # update everything and remove emacs with its dependents
   nih update _ emacs--

   # update everything and replace installed emacs with emacs-22
   nih update _ emacs- editors/emacs22

   # update everything except two emacs pkgs
   nih update _ lua-mode/ ruby-mode/

   # uninstall all emacs modules
   nih install emacs-- emacs/
.VE
.P
The output format can be changed with a help of shell functions
"summary2packages_to_be_removed", "summary2packages_to_be_installed"
or "summary2packages_to_be_installed_as_dep" defined
in the configuration file.
See @dfltconfdir@/nih.default.conf for details.
The default format may change in future releases.
.RE
.TP
.BR  uninstall ", " delete " and " remove
Uninstall packages with all dependent packages. Basically, this is equivalent
to using the install/update command in conjunction with the package suffix "--".
.P
.RS
.B "nih uninstall"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -n
Don't actually remove a package, just report the steps that
would be taken if it were.
.TP
.B -l
The same as
.BR "nih install -l" .
.TP
.B -L
The same as
.BR "nih install -L" .
.TP
.B -p
The same as
.BR "nih install -p" .
.TP
.B -P
The same as
.BR "nih install -P" .
.TP
.B -t
Uninstall "try out" packages.
.RE
.P
.RS
Examples:
.VB
   # uninstall mawk and gawk with their dependents
   nih remove mawk lang/gawk

   # uninstall perl with its dependents but
   # do not remove auto-installed leaf packages
   nih delete -l perl

   # uninstall try-out packages
   nih uninstall -t
.VE
.RE
.TP
.B  verify
Verify integrity of installed packages.
.P
.RS
.B "nih verify"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -m
Check checksums of installed files.
.TP
.B -l|-U
Check for REQUIRES/PROVIDES consistency.
.TP
.B -L
Check if library files listed in REQUIRES exist.
.TP
.B -d
Check if dependencies are present and their versions match.
.TP
.B -s
Compare "uname -r" output
and the version of the OS on which the packages were built.
.RE
.P
.RS
Examples:
.VB
   # see above
   nih verify -dLls

   # Check checksums for all installed packages
   nih verify -m

   # Check checksums for gawk and libraries
   nih verify -m 'lib*' gawk

   # 
   nih verify -s midori
.VE
.RE
.TP
.B  status
Compare installed packages and their versions with pkg_summary(5)
(default) or pkgsrc tree. For details see pkg_status(1).
.P
.RS
.B "nih status"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -b
Compare installed packages against pkg_summary(5). This is the default.
.TP
.B -s
Compare installed packages against pkgsrc tree.
.TP
.B -r
Output in raw format (the one of pkg_cmp_summary(1)).
.TP
.B -u
Analyse packages installed by user (contrast with
.B -a 
option). This is the default.
.TP
.B -a
Analyse all packages (contrast with 
.B -u 
option).
.TP
.B -A
By default up-to-date packages are not shown,
with
.B -A 
they are output too.
.TP
.B -B
Consider packages different if their BUILD_DATE differ.
This option works only with
.BR -b .
.TP
.B -q
No noisy reminder about output format.
.RE
.P
.RS
Examples:
.VB
   # compare all installed packages with binary repository
   nih status -a

   # same as above but output status of all packages,
   # not only changed ones
   nih status -aA

   # compare packages installed by user with binary repository,
   # consider packages different if their BUILD_DATE differ
   nih status -uBq

   # compare pkglint with pkgsrc
   nih status -sqr pkglint
.VE
.RE
.TP
.B  audit
Download a new pkg-vulnerabilities file and check given
installed packages for vulnerabilities. If no package is given,
check all installed packages.
.P
.RS
.B "nih audit"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -d
Download a new pkg-vulnerabilities file,
do not check packages.
.TP
.B -c
Check the packages for vulnerabilities
using existing pkg-vulnerabilities file.
.RE
.TP
.B  leaf
Output or uninstall leaf packages.
.P
.RS
.B "nih leaf"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -a
Output all leaf packages.
.TP
.B -A
Output auto-installed leaf packages. This is the default.
.TP
.B -R
Remove auto-installed leaf packages.
.TP
.B -n
Don't actually uninstall packages,
just report the steps that would be taken.
.TP
.B -r
Output raw package summaries.
.RE
.P
.RS
Output format can be changed with a help of the shell
function 'summary2leaf_packages'
defined in the configuration file.
See @dfltconfdir@/nih.default.conf for details.
The default format may change in future releases.
.RE
.TP
.B  list
Show packages available in the repository or installed packages.
By default packages available in the repository are listed.
.P
.RS
.B "nih list"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -b
Output packages available in the binary repository. This is the default.
.TP
.B -a|-i
Output all installed packages.
.TP
.B -p
Output packages from pkg_src_summary.txt file built from pkgsrc tree by
.BR "nih refresh -p" .
.TP
.B -u
Output packages installed by user.
.TP
.B -t
Output packages marked "try out". See "nih mark -t" for details.
.TP
.B -k
Output packages marked "keep".  See "nih mark -k" for details.
.TP
.B -r
Show raw package summaries.
.RE
.P
.RS
Output format can be changed with a help of the shell
functions 'summary2available_packages' and 'summary2installed_packages'
defined in the configuration file.
See @dfltconfdir@/nih.default.conf for details.
The default format may change in future releases.
.RE
.TP
.B  mark
Show or modify markers of the specified packages. The default is to show markers.
.P
.RS
.B "nih mark"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -u/-U
Mark/unmark packages as "installed by user".
.TP
.B -a/-A
Mark/unmark packages as "auto-installed".
.TP
.B -t/-T
Mark/unmark packages with "try out" flag.
.TP
.B -k/-K
Mark/unmark packages with "keep" flag.  "keep" marker means that a
package can't be updated by "nih update" command.  This marker is
particularly useful to mark packages that the user compiled manually
from pkgsrc.
.P
NOTES: in effect, -a and -U are synonyms, -u and -A are synonyms.
.RE
.P
.RS
Examples:
.VB
   # output markers of mplayer
   nih mark mplayer

   # mark libmaa package as auto-installed
   nih mark -a libmaa

   # mark ffmpeg package as installed by user
   nih mark -u ffmpeg

   # mark window managers as "try-out"
   nih mark -t wmii openbox fluxfox sawfish xfce4

   # remove try-out marker from ctwm
   nih mark -T ctwm

   # do not update the specified packages
   nih mark -k lua-mode ruby-mode dictem
.VE
.P
The output format can be changed with a help of the shell
function 'summary2markers' defined in the configuration file.
See @dfltconfdir@/nih.default.conf for details.
The default format may change in future releases.
.RE
.TP
.B  deps
Show a dependency graph of dependent packages for the given package(s).
This works for both the packages already installed on the system and available in the binary repository.
If no packages are specified, a graph for all repository packages is shown.
.P
.RS
.B "nih deps"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -b
Output dependency graph for packages from binary repository. This is the default.
.TP
.B -i
Output dependency graph for installed packages.
.TP
.B -p
Output dependency graph for packages from pkg_src_summary.txt file built from pkgsrc tree by
.BR "nih refresh -p" .
.TP
.B -1
Output direct dependencies or dependent packages.
.TP
.B -r
Output a graph of dependency packages rather than dependent packages.
.TP
.B -l
Output a list of packages instead of a graph.
.TP
.B -B
Output PKGBASE. This is the default.
.TP
.B -P
Output PKGPATH.
.TP
.B -N
Output PKGNAME.
.TP
.B -t
Output the graph in tsort(1) compatible format.
.RE
.P
.RS
Examples:
.VB
   nih deps
   nih deps -P
   nih deps -PB
   nih deps glib2
   nih deps -r glib2
   nih deps -lBP 'devel/glib2;glib2' 'devel/libmaa;libmaa'
   nih deps -P devel/glib2 devel/libmaa
.VE
.RE
.TP
.B clean-cache
Clean up CACHEDIR directory. With no arguments, all binaries
except those of installed packages are removed.
.P
.RS
.B "nih clean-cache"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -n
List files to be removed, do not actually remove anything.
.TP
.B -a
Remove all binaries, including binaries of the installed packages.
.TP
.B -i
Do not remove binaries of the packages listed in ~/.nih/installed_* files.
Unlike running plain
.I
nih clean-cache
without options, running it with -i option
does not remove binaries of packages that the user ever tried, since these
packages are reflected in the history files ~/.nih/installed_*.
.RE
.TP
.B history
Show the history of changes that include package installs, removals, upgrades,
downgrades, replacements and flag changes.
The history is recorded in the files ~/.nih/installed_* .
.P
.RS
.B "nih history"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -B
Consider packages different if their BUILD_DATE differ.
.RE
.SH FILES
.TP
.IR "~/.nih/config" " or " @sysconfdir@/nih/config
Configuration file for nih.
.br
See @dfltconfdir@/nih.default.conf for details.
.TP
.I "~/.nih"
Directory where pkg_inst_summary.txt (summaries for installed
packages), pkg_src_summary.txt (summaries for pkgsrc tree),
pkg_summary.txt (downloaded summaries for binary packages),
pkg_summary_YYYYMMDD_hhmm.txt, SHA512_YYYYMMDD_hhmm.txt, and
installed_YYYYMMDD_hhmm.txt files are stored.
.SH NOTES
.I Auto-installed package
means this package was installed as a dependency, see
.B pkg_add -A
for details. Other packaging system may call such packages
.IR auto-removable " or " orphaned
when there are no packages that require it.
.SH SEE ALSO
.BR pkg_status(1) ,
.BR pkg_digger(1) ,
.BR pkg_online-find(1) ,
.BR pkg_summary(5) ,
.B pkg_summary-utils(7)
.SH AUTHOR
Aleksey Cheusov <vle@gmx.net>
