.\"     $NetBSD$
.\"
.\" Copyright (c) 2010-2011 by Aleksey Cheusov (vle@gmx.net)
.\" This man page may contain portions of pkgin.1 by Emile Heitor.
.\" Absolutely no warranty.
.\"
.\" ------------------------------------------------------------------
.de VB \" Verbatim Begin
.ft CW
.nf
.ne \\$1
..
.de VE \" Verbatim End
.ft R
.fi
..
.\" ------------------------------------------------------------------
.TH NIH 1 "Oct 16, 2011" "" ""
.SH NAME
nih \- package manager for pkgsrc
.SH SYNOPSIS
.BI nih " [options] " <command> " [command options] [--] [args...]" 
.br
.BI "nih <command>" " -h"
.SH DESCRIPTION
The
.B nih
is a command-line tool for managing pkgsrc packages. It relies on pkg_summary(5)
for installation, removal and update of packages and associated
dependencies using remote or local repository.
.SH OPTIONS
.TP
.B "-h"
Display help message.
.TP
.B "-V"
Display nih version.
.TP
.B "-y"
Answer 'Yes' to all questions.
.TP
.BI "-s" " summary_file"
Specify the path to pkg_summary(5) file for use instead of downloaded one
or specified in a config file. Plain text, gzip-ed of bzip2-ed files
are supported.
.SH COMMANDS
The following commands are provided.
.TP
.B  help
Display help message
.TP
.B  refresh
Download pkg_summary(5) and SHA512 files from the remote repository and
unpack them to ~/.nih/. The URL of the parent directory under which
these files are located is specified in the REPOSITORY configuration variable.
Unless
.I NO_SUMMARY_COPY
variable is set in the configuration file, the previous version of the files
pkg_summary.txt and SHA512.txt is backed up into "pkg_summary_YYYYMMDD_hhmm.txt" and
"SHA512_YYYYMMDD_hhmm.txt" respectively. So, they can be restored and used again
at any point in the future.
If
.I IGNORE_CKSUMS
variable is set to a non-empty string, SHA512.txt file is not downloaded and cksums
of binary packages are not checked.
.P
.RS
.B "nih refresh"
accepts the following options:
.TP
.B -h
Display help message.
.RE
.TP
.B  info
Show information about packages available in the binary repository or about installed packages.
.P
.RS
.B "nih info"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -b
Query the binary repository. This is the default.
.TP
.B -o
Query pkg_online database.
.TP
.B -I
Display information about installed packages.
.TP
.B -r
Output raw package summaries.
.TP
.B -q
Quiet mode, do not print "No matches found" to stderr
.RE
.P
.RS
Examples:
.VB
   nih info -h
   nih info glib2 runawk emacs
   nih info -Ir glib2 runawk
   nih info -orq glib2 runawk
.VE
.RE
.TP
.B meta
Show information about meta packages available in the binary repository
or installed meta packages.
.P
.RS
.B "nih meta"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -b
Query the binary repository. This is the default.
.TP
.B -o
Query pkg_online database.
.TP
.B -I
Display information about installed meta packages.
.TP
.B -q
Quiet mode, do not print "No matches found" to stderr
.TP
.B -r
Output raw package summaries.
.RE
.P
.RS
Examples:
.VB
   nih meta -h
   nih meta
   nih meta -I
   nih meta -oq
.VE
.P
The output format can be changed with a help of the shell
function 'summary2meta_packages' defined in the configuration file.
See @dfltconfdir@/nih.default.conf for details.
The default format may change in future releases.
.RE
.TP
.B  search
Search for packages in pkg_summary(5), online database or in installed packages.
For details see pkg_digger(1).
.P
.RS
.B "nih search"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -b
Search in the binary repository. This is the default.
.TP
.B -o
Search in pkg_online database.
Search is performed using pkgtools/pkg_online-client package.
.TP
.B -I
Search in installed packages.
.TP
.B -s
List avalable search strategies.
.TP
.B -f
List available search fields. Field names (e.g. PKGNAME, COMMENT, etc)
can be used to focus 'nih search' invocations on a specific field
of package description. See examples below.
.TP
.B -1
Display one-line information about the packages (default).
.TP
.B -3
Display short information about the packages.
.TP
.B -9
Display full information about the packages.
.TP
.B -r
Raw output in pkg_summary(5) format. This option requires either
.BR -3 " or " -9 " option.
.TP
.B -q
Quiet mode, do not print "No matches found" to stderr.
.RE
.P
.RS
Examples:
.VB
   nih search -h
   nih search -s
   nih search -f
   nih search DEPENDS:substring:libmaa
   nih search PKGNAME:prefix:dict
   nih search COMMENT:word:dns PKGPATH:prefix:net
   nih search c:kw:'dns server'
   nih search n:p:lua
   nih search FILE_SIZE:awk:'fvalue+0 > 100000000'
   nih search ::emacs
   nih search -I3 automatic::yes
   nih search -9 lang/mawk
   nih search -os
   nih search -of
   nih search -o oberon
   nih search -o dns server
   nih search -o3 dictionary -spell -japanese -chinese -korean
   nih search -o -q9r spreadsheet
.VE
.RE
.TP
.BR  install " and " update
Install, uninstall or update specified packages.
If no packages are specified
full update is done. Packages with "keep" flag (see "nih mark -k" and
"nih list -k" for details) are not updated.
Packages may be specified as
PKGBASE, PKGNAME, PKGPATH or a filename, optionally with one of the following suffixes:
 "-" (tells to uninstall the package),
 "--" (tells to uninstall the package with all dependent packages),
 "+" (tells to install/update the package and mark it as auto-installed), or
 "_" (tells to install/update the package without altering auto-installed flag).
 "/" (tells to not update or uninstall the package).
When installing, packages without a suffix are marked as installed by user.
When uninstalling, automatically installed leaf packages are removed automatically.
If "_" is specified as a package, all packages
for which update is available will be updated.
.B nih
tries to resolve conflicts and satisfy dependencies automatically.
If it fails, conflict resolution should be done manually.

By default PKGPATH of installed
packages remains unchanged. This has an effect that if, for example, emacs-21 was installed
from editors/emacs21, running the command
.VB

   nih install editors/emacs23

.VE
will not update it to emacs-23 from editors/emacs23.
To get the package updated, run the following:
.VB

   nih install editors/emacs23 emacs-

.VE

Before a package is actually altered, a list of installed packages
is saved to the history file ~/.nih/installed_YYYYMMDD_hhmm.bz2 unless
.I NO_INSTALLED_COPY
variable is set in the config file. The same applies to
.IR uninstall " and " leaf
commands.

Once the binaries have been downloaded, the packages to be installed
are checked for common files in order to prevent file name clashes and the consequent
failures in the middle of the process. This is in addition to analysing
the CONFLICTS variable that most (but probably not all) packages normally define.
Setting NO_PLIST_CHECK variable to a non-empty string disables
the additional checking procedure,
the CONFLICTS variable is still examined.
.P
.RS
.B "nih install" 
or 
.B "nih update"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -n
Do not actually alter the package, just report the steps that
would be taken if it were.
.TP
.B -d
Do not update installed packages, download binaries only.
.TP
.B -k
Continue downloading packages despite errors that may occur underway.
.TP
.B -l
Do not remove auto-installed leaf packages. Bear in mind that
this may cause problems in creating a non-conflicting update plan.
.TP
.B -B
Consider packages different if their BUILD_DATE differ.
.TP
.B -r
Update specified packages and all their dependencies.
.TP
.B -R
Update specified packages and all dependent packages.
.TP
.BI -a " val"
Set
.I PKG_PATH
and run
.B pkg_add(8)
directly.
In this scenario, the update plan is not generated, packages are not
checked for PLIST conflicts, suffixes '+', '-', '--', '_' etc. are
not supported, packages installed as a dependency are not removed,
downloaded binaries are not saved in
.IR $CACHEDIR ...
If
.I val
is 1, PKG_PATH is set to
.IR $CACHEDIR/All ,
if it is 2, PKG_PATH is set to
.IR $REPOSITORY/All .
Use this option with caution.
.TP
.B -t
Install packages and mark them as "try out". Other commands of nih
implement an option (typically, -t) to address packages that hold this flag.
For example, such packages may be listed using
.I nih list -t
or uninstalled with a help of
.IR "nih remove -t" .
Similarly, to manually mark/unmark packages as "try out" the commands
.IR "nih mark -t/-T"
can be used respectively.
.br
.B NOTE:
"try out" marker is set with a help of
.br
.I pkg_admin set try_out=yes <packages>.
.TP
.B -D
Enable debugging output.
.RE
.P
.RS
Examples:
.VB
   nih install -h

   # update all packages
   nih update

   nih -y update -dk openoffice2 firefox midori

   # install gawk and uninstall mawk
   nih install mawk_ lang/gawk

   nih install perl-5.12.2nb2

   # replace libao-oss with libao-alsa
   nih install libao-alsa libao-oss-

   # replace emacs (21,22,23,...) with editors/emacs20
   nih install editors/emacs20 emacs-

   # install GConf and xproto and mark them as auto-installed
   nih install GConf+ xproto+

   # uninstall four pkgs
   nih install gmake- autoconf- automake- libtool-base-

   # replace wip/dict-client with textproc/dict-client
   nih install textproc/dict-client wip/dict-client-

   # install package from file
   nih install /usr/pkgsrc/packages/xyz-1.2.3.tgz

   # install window managers for testing/playing
   nih install -t xfce4 fvwm openbox ctwm wmii fluxbox sawfish

   # update everything except two emacs pkgs
   nih update _ lua-mode/ ruby-mode/

   # uninstall all emacs modules
   nih install emacs-- emacs/
.VE
.P
The output format can be changed with a help of shell functions
'summary2packages_to_be_removed', 'summary2packages_to_be_installed'
or 'summary2packages_to_be_installed_as_dep' defined in the configuration file.
See @dfltconfdir@/nih.default.conf for details.
The default format may change in future releases.
.RE
.TP
.BR  uninstall ", " delete " and " remove
Uninstall packages with all dependent packages. Basically, this is equivalent
to using the install/update command in conjunction with the package suffix "--".
.P
.RS
.B "nih uninstall"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -n
Don't actually remove a package, just report the steps that
would be taken if it were.
.TP
.B -l
Do not remove auto-installed leaf packages.
.TP
.B -t
Uninstall "try out" packages.
.RE
.P
.RS
Examples:
.VB
   nih uninstall -h
   nih remove mawk lang/gawk
   nih delete perl
.VE
.RE
.TP
.B  verify
Verify package integrity.
.P
.RS
.B "nih verify"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -m
Check checksums of installed files.
.TP
.B -U
Check for REQUIRES/PROVIDES coherence.
.TP
.B -L
Check if library files listed in REQUIRES exist.
.TP
.B -d
Check if dependencies are present and their versions match.
.TP
.B -s
Compare "uname -r" output
and the version of the OS on which the packages were built.
.RE
.P
.RS
Examples:
.VB
   nih verify -dLUs
   nih verify -m
   nih verify -m 'lib*' gawk
   nih verify -s midori
.VE
.RE
.TP
.B  status
Compare installed packages and their versions with pkg_summary(5)
(default) or pkgsrc tree. For details see pkg_status(1).
.P
.RS
.B "nih status"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -b
Compare installed packages against pkg_summary(5). This is the default.
.TP
.B -s
Compare installed packages against pkgsrc tree.
.TP
.B -r
Output in raw format (the one of pkg_summary).
.TP
.B -u
Analyse packages marked as installed by user (contrast with
.B -a 
option). This is the default.
.TP
.B -a
Analyse all packages (contrast with 
.B -u 
option).
.TP
.B -A
By default up-to-date packages are not shown,
with
.B -A 
they are shown too.
.TP
.B -B
Consider packages different if their BUILD_DATE differ.
This option works in conjunction with 
.B -b 
option only.
.TP
.B -q
No noisy reminder about output format.
.RE
.P
.RS
Examples:
.VB
   nih status -a
   nih status -uq
   nih status -sqr pkglint
.VE
.RE
.TP
.B  audit
Download a new pkg-vulnerabilities file and check given
installed packages for vulnerabilities. If no package is given,
check all installed packages.
.P
.RS
.B "nih audit"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -d
Download a new pkg-vulnerabilities file,
do not check packages.
.TP
.B -c
Check the packages for vulnerabilities
using existing pkg-vulnerabilities file.
.RE
.P
.RS
Examples:
.VB
   nih audit -h
   nih audit
   nih audit -d
   nih audit -c 'ffmpeg*'
.VE
.RE
.TP
.B  leaf
Show or uninstall all auto-installed leaf packages.
With no options, show.
??? explain here what a leaf package is.
.P
.RS
.B "nih leaf"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -t
Show PKGNAME only.
.TP
.B -R
Remove auto-installed leaf packages.
.TP
.B -n
Don't actually uninstall packages,
just report the steps that would be taken.
This option requires -R option.
Without -R option, the command simply lists all auto-installed leaf packages,
the same as with no options at all.
This behaviour may change in the future.
.RE
.P
.RS
Examples:
.VB
   nih leaf -t
   nih leaf -R
   nih leaf -Rn
.VE
.RE
.TP
.B  license
(not implemented yet)
.TP
.B  list
Show packages available in the repository or installed packages.
By default packages available in the repository are listed.
.P
.RS
.B "nih list"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -b
List packages available in the binary repository. This is the default.
.TP
.B -a|-I
List all installed packages.
.TP
.B -u
List packages installed by user.
.TP
.B -t
List packages marked "try out". See "nih mark -t" for details.
.TP
.B -k
List packages marked "keep".  See "nih mark -k" for details.
.TP
.B -r
Show raw package summaries.
.RE
.P
.RS
Examples:
.VB
   nih list -h
   nih list
   nih list -ur
.VE
.P
Output format can be changed with a help of the shell
functions 'summary2available_packages' and 'summary2installed_packages'
defined in the configuration file.
See @dfltconfdir@/nih.default.conf for details.
The default format may change in future releases.
.RE
.TP
.B  mark
Show or modify markers of the specified packages. The dafault is to show markers.
If no packages are specified, all installed packages with their markers are listed.
.P
.RS
.B "nih mark"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -u/-U
Mark/unmark packages as "installed by user".
.TP
.B -a/-A
Mark/unmark packages as "auto-installed".
.TP
.B -t/-T
Mark/unmark packages with "try out" flag.
.TP
.B -k/-K
Mark/unmark packages with "keep" flag.  "keep" marker means that a
package can't be updated by "nih update" command.  This marker is
particularly useful to mark packages that the user compiled manually
from pkgsrc.
.P
NOTES: in effect, -a and -U are synonyms, -u and -A are synonyms.
.RE
.P
.RS
Examples:
.VB
   nih mark -h
   nih mark
   nih mark -a libmaa
   nih mark -u ffmpeg # we use ffmpeg(1)
   nih mark -t wmii openbox fluxfox sawfish xfce4
   nih mark -T ctwm # my primary window manager
   nih mark -k lua-mode ruby-mode dictem # manually built for emacs-22
.VE
.P
The output format can be changed with a help of the shell
function 'summary2markers' defined in the configuration file.
See @dfltconfdir@/nih.default.conf for details.
The default format may change in future releases.
.RE
.TP
.B  deps
Show a dependency graph of dependent packages for the given package(s).
This works for both the packages already installed on the system and available in the binary repository.
If no packages specified, a graph for all repository packages is shown.
.P
.RS
.B "nih deps"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -r
Show a graph of dependency packages rather than dependent packages.
.TP
.B -l
Output a list of packages instead of a graph.
.TP
.B -B
Output PKGBASE. This is the default.
.TP
.B -P
Output PKGPATH.
.TP
.B -N
Output PKGNAME.
.TP
.B -t
Output the graph in tsort(1) compatible format.
.TP
.B -I
Show dependency graph for installed packages.
.RE
.P
.RS
Examples:
.VB
   nih deps
   nih deps -P
   nih deps -PB
   nih deps glib2
   nih deps -r glib2
   nih deps -lBP 'devel/glib2;glib2' 'devel/libmaa;libmaa'
   nih deps -P devel/glib2 devel/libmaa
.VE
.RE
.TP
.B clean-cache
Clean up CACHEDIR directory. With no arguments, all binaries
except those of installed packages are removed.
.P
.RS
.B "nih clean-cache"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -n
List files to be removed, do not actually remove anything.
.TP
.B -a
Remove all binaries, including binaries of the installed packages.
.TP
.B -i
Do not remove binaries of the packages listed in ~/.nih/installed_* files.
Unlike running plain
.I
nih clean-cache
without options, running it with -i option
does not remove binaries of packages that the user ever tried, since these
packages are reflected in the history files ~/.nih/installed_*.
.RE
.TP
.B history
Show the history of changes that include package installs, removals, upgrades,
downgrades, replacements and flag changes.
The history is recorded in the files ~/.nih/installed_* .
.P
.RS
.B "nih history"
accepts the following options:
.TP
.B -h
Display help message.
.TP
.B -B
Consider packages different if their BUILD_DATE differ.
.RE
.SH FILES
.TP
.IR "~/.nih/config" " or " @sysconfdir@/nih/config
Configuration file for nih.
.br
See @dfltconfdir@/nih.default.conf for details.
.SH BUGS
Sometimes
.I nih
fails to find dependencies correctly, for example,
.VB

   nih install www/apache2

.VE
fails to find the correct version of the package.
.IR apr .
In order to fix this kind of issues, necessary dependencies should be given explicitly
like this:
.VB

   nih install www/apache2 devel/apr0+

.VE
.SH SEE ALSO
.BR pkg_status(1) ,
.BR pkg_digger(1) ,
.BR pkg_summary(5) ,
.BR pkg_online(7??????) ,
.B pkg_summary-utils(7)
.SH AUTHOR
Aleksey Cheusov <vle@gmx.net>
